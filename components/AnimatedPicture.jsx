import { useMemo, useState, useEffect } from "react";
import { motion, useMotionValue, animate } from "framer-motion";
// import { useFlubber } from "./useFlubber";

const START_BLOB =
  "M182.51749212091624 387.06292724609375C142.30770157322743 341.4335581461589 152.97203873143056 241.0839106241862 178.32169133966624 191.95803833007812C203.67134394790193 142.83216603597006 294.75526728774565 95.27972157796223 334.6154077703303 92.30769348144531C374.47554825291496 89.33566538492839 403.32169642592925 111.88810984293619 417.48253423517406 174.12586975097656C431.64337204441887 236.36362965901694 458.74127497817534 430.24474334716797 419.58043462579906 465.7342529296875C380.4195942734228 501.22376251220703 222.72728266860506 432.6922963460286 182.51749212091624 387.06292724609375C142.30770157322743 341.4335581461589 152.97203873143056 241.0839106241862 178.32169133966624 191.95803833007812 ";
const END_BLOB =
  "M344.0559387207031,386.01397705078125C303.3216730753581,407.6922963460286,216.25873819986978,473.95104726155597,172.02796936035156,450C127.79720052083334,426.04895273844403,67.65733846028645,300.3496513366699,78.67132568359375,242.3076934814453C89.68531290690105,184.2657356262207,177.62238057454428,115.2097905476888,238.1118927001953,101.74825286865234C298.6014048258464,88.28671518961589,411.8881200154622,125.17482884724936,441.6083984375,161.53846740722656C471.3286768595378,197.90210596720377,432.6923065185547,282.51749928792316,416.4335632324219,319.9300842285156C400.17481994628906,357.3426691691081,384.79020436604816,364.3356577555339,344.0559387207031,386.01397705078125C303.3216730753581,407.6922963460286,216.25873819986978,473.95104726155597,172.02796936035156,450";
const paths = [START_BLOB, END_BLOB];

const AnimatedPicture = ({ name, className }) => {
  // const [pathIndex, setPathIndex] = useState(0);
  // const progress = useMotionValue(pathIndex);
  // const path = useFlubber(progress, paths);

  // useEffect(() => {
  //   const animation = animate(progress, pathIndex, {
  //     duration: 0.8,
  //     ease: "easeInOut",
  //     onRepeat: () => {
  //       if (pathIndex === paths.length - 1) {
  //         progress.set(0);
  //         setPathIndex(0);
  //       } else {
  //         setPathIndex(pathIndex + 1);
  //       }
  //     },
  //   });

  //   return () => animation.stop();
  // }, [pathIndex, progress]);

  return (
    <svg
      style={{
        width: 200,
        height: 200,
        background: "rgba(255, 255, 255, 0.4)",
        borderRadius: 30,
      }}
    >
      <motion.path
        style={{
          stroke: "#70f",
          strokeWidth: 20,
          strokeLinecap: "round",
          fill: "transparent",
        }}
        d="M 40,40 Q 160,40 160,160"
        animate={{
          d: [
            "M 40,40 Q 160,40 160,160",
            "M 160,40 Q 100,100 40,160",
            "M 160,160 Q 100,160 40,160",
            "M 160,40 Q 100,160 40,40",
            "M 160,40 Q 100,40 40,40",
            "M 40,40 Q 160,40 160,160",
          ],
        }}
        transition={{
          repeat: Infinity,
          ease: "easeInOut",
          duration: 6,
          times: [0, 0.16, 0.33, 0.5, 0.66, 0.83],
        }}
      />
    </svg>
  );
};

export default AnimatedPicture;
